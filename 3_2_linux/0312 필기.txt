p123 메타문자
[ 경로이름 메타문자 ]
~ : 현 사용자의 홈 디렉토리의 경로를 함축
- : cd 명령어 사용시 이전 경로를 자동 인식
~- : 이전 디렉토리의 경로 함축
./ : 상대경로로 가리키게 되고 
~+ : 절대경로로 가리킴 
~사용자 : 사용자 홈 디렉토리

[ 파일이름 메타문자 ]
* : zero or more
여러개의 파일을 한방에 지울때 rm -rf *
특정 파일지울때 rm -f file0*
검색할때 ls -l file*
? : 정규표현식의 . 과 동일한 의미 (모든 한 글자를 뜻함)
[] : []안에 들어가는 문자들을 하나씩대입
[!] : [!]안에 들어가는 문자들을 제외한 나머지
	ex. rm -f file[!b]* => fileb말고 다 지우게됨. file02이런것도 다.
{} : 브레이스 확장. {} 안에 들어가 있는 문자열이나 숫자를 임의대로 나열
	ex. touch file{0,1,2,3,4,5} => file0 file1 file2 file3 file4 file5 (문자열도 가능)
	touch file{01..100} => 01번부터 100번까지생성
	rm -f file{a[0-9],b???,c*} 이런식으로 섞어쓸수도있음
	(+) [ ]는 [0-9], [0,1] 이런식으로 한가지 문자에 대한 여러가지보기를 써놓는거고
	{ }얘는 {0-9}{5-7} 이런식으로 범위를 쓴다
(+) 파일이름을 this is file로 하고싶다면 touch 'this is file' 또는 touch this\ is \ file
	\이 구분자인 띄워쓰기를 문자로 인식하게 함
(+) ""는 일부 문자만 문자로 인식시킴
	''는 모든 문자를 문자화 시킴
	ex. echo date => date
	    echo $(date) => Mar 11 ....
	    echo "date is $(date)" => date is Mar 11 ...
	    echo 'date is $(date)' => date is $(date)
(+) "\'date' is 'date'" => \는 하나만 영향을 미치기때문에 아직 '가 덜닫겼다고 생각함
	"\'date\' is 'date'"가 돼야 문장이 끝남

p 129
>나 >>는 앞에 1이 디폴트 값 
리디렉션 뭐라고하는지 모르겠다.

p 130 파이프라인
여러가지 파이프라인을 조합해서 쓸 수도 있다.
ls -lR / | less &> r01 해당 파일을  끊어서 보고있고 저장도하고싶다 !
=> 근데 안됨 ;;;;;; 무끼끼 !! 속았따 !!!
출력과 동시에 할 수 있는 방법이 있음
오류 저장은 충돌하지 않는다. 0이 충돌한것 ㅠ
rpm -qa | grep sh | tee r02
rpm -qa | grep bash | tee r02
rpm -qa | tee r01 | grep bash
=> 이 것들의 차이 :  grep을 거친 후인지 아닌지, 순서도 중요하다! 

p139 프로세스
[root@localhost mtest]# ps
   PID TTY          TIME CMD
  4025 pts/0    00:00:00 bash
 61815 pts/0    00:00:00 su
 62676 pts/0    00:00:00 su
 62684 pts/0    00:00:00 bash
 63498 pts/0    00:00:00 psp

p153 
[root@localhost ~]# gedit & => 백그라운드에서 실행. 프롬포트는 살아있음
(+) killall [옵션] -u

무조건 강제삭제 : 옵션 (-9)
========================================
파일 및 디렉토리 생성 복사 이동 삭제 실습

pwd
/root/

1. /etc/sysconfig 복사해서 /root/filetest/ 넣으세요.
[root@localhost ~]# mkdir /root/filetest
[root@localhost ~]# cp -r /etc/sysconfig /root/filetest/

2. /root/filetest/sysconfig/network-scripts/를 이동시켜 /root/filetest1/에 넣으세요.
[root@localhost ~]# mv /root/filetest/sysconfig/network-scripts/ /root/filetest1/

3. /root/filetest1/network-scripts 디렉토리에 파일 이름이 testfile을 만드시오.
[root@localhost ~]# touch testfile /root/filetest1/network-scripts

4. /root/filetest1/network-scripts/testfile 을 복사해서 /root/testfile1을 만드시오
[root@localhost ~]# cp /root/filetest1/network-scripts/testfile /root/testfile1

5. /root/testfile1 파일을 /tmp/testfile로 이름을 바꾸시오.
[root@localhost ~]# mv /root/testfile1 /tmp/testfile

6. /root/b/bb/bbb/bbbb를 명령어 한줄로 만드시오
[root@localhost ~]# mkdir -p /root/b/bb/bbb/bbbb

7. /root/filetest/ 의 시간 정보를 현재 시작으로 바꾸시오.
[root@localhost ~]# touch /root/filetest

8. rmdir 명령어로 /root/b/디렉토리를 삭제하시오.
[root@localhost ~]# rmdir -p /root/b/bb/bbb/bbbb
========================================================
링크파일 실습

실습 위치
pwd
/root/

gedit file1 
1
2
3

gedit file2
a
b
c

file1 hfile 하드링크 생성     
[root@localhost ~]# ln file hfile
      sfile1 소프트링크 생성  
[root@localhost ~]# ln -s file sfile1

file1 => file3 이름 변경  
[root@localhost ~]# mv file1 file3
file2 => file1 이름 변경  
[root@localhost ~]# mv file2 file1

hfile, sfile 내용 확인
[root@localhost ~]# cat hfile : 숫자
[root@localhost ~]# cat sfile1 : 영어

현재 file1에 대한 소프트링크 생성시 절대경로로 sfile2으로 소프트링크 생성

file3을 /tmp/file1로 이동시키면서 이름변경

sfile1 과 sfile2을 /tmp로 이동

sfile1 과 sfile2 내용 확인
========================================================
퍼미션 

/tmp/p 디렉토리 생성
[root@localhost ~]# mkdir /tmp/p

/tmp/p 안에 파일 f1,f2,f3,f4 생성
[root@localhost ~]# touch f1 f2 f3 f4 /tmp/p

1. 파일 전체를 모두 rwx 로 권한 줄 것 (심볼릭 모드)
[root@localhost p]# chmod a=rwx f1 f2 f3 f4

2. f1 에서 소유자는 쓰기 권한을 빼고 소유그룹은 실행권한을 빼고 기타 사용자는 기타사용자는 모든 권한 뺄 것( 심볼릭모드)
[root@localhost p]# chmod u-w,g-x,o= f1

3. f2 소유자와 소유그룹을 r-x로 셋팅할 것(심볼릭 모드)
[root@localhost ~]# chmod ug=rx /tmp/p/f2

4. f3 소유자는 읽기,쓰기,실행.  소유그룹은 읽기,실행.  기타사용자는 읽기. 권한을 줄 것(8진수 모드)
[root@localhost p]# chmod 754 f3

5. /tmp/p 의 모든 파일의 소유자와 소유그룹을 centos로 변경할 것
[root@localhost ~]# chown -R centos:centos /tmp/p

centos로 사용자 전환 (su - centos)

6. f4 소유자 읽기.  소유그룹 쓰기.  기타사용자 실행.  권한 뺄 것(8진수 모드)


7. 파일이 생성될때 기타사용자에 대해서만 쓰기, 실행 권한이 빠지도록 기본권한을 설정하시오.(명령어로)
umask

================================================
grep 실습

/var/log를 /tmp/copydir 로 넣으세요.
[root@localhost ~]# cp -r /var/log /tmp/copydir

/tmp/copydir/log/secure 파일을 /tmp/secure_s로 심볼릭 링크를 만드시오.

1. /tmp/secure_s 에서 root 패턴을 검색

2. /tmp/secure_s 에서 s로 시작해서 t로 끝나는 패턴 검색

3. /tmp/secure_s 에서 대소문자를 무시하고 'ju' 패턴 검색
 
4. /tmp/secure_s 에서 su 단어가 있는 패턴만 검색

5. /tmp/secure_s 에서 centos를 검색하되 단어가 아닌 정규 표현식을 사용해서  검색

6. /tmp/copydir 에서 root 패턴 검색

7. /tmp/secure_s 에서 3월 01일~21일자의 08:00부터 20:59 까지의 내용만 출력

8. /tmp/secure_s 에서 root와 centos 패턴 동시에 검색 (2가지 방법모두 사용해 볼것)

9. /tmp/secure_s 에서  . 자체를 검색하시오 (2가지 방법 모두 사용해 볼것)

============================================
find 실습

1. /tmp 에서 이름이 messages 인 파일을 찾으시오.
[root@localhost tmp]# find -name 'messages'

2. /var/log/에서 파일 타입이 디렉토리 이며 사용자가 pcp 인 파일을 찾으시오.

3. /tmp 에서 파일 크기가 5byte 이하인 파일을 검색해서 자세하게 출력하시오.

4. /tmp 에서 파일명이 old 로 끝나는 파일을 찾아서 /root/로 이동시키시오.

5. /tmp 에서 파일명이 cron 로 시작하는 파일을 찾아서 대화형으로 삭제하시오.

6. /tmp 에서 log라는 이름이 포함된 파일명 그리고 type이 file 인 파일을 찾아서 삭제하시오.

==================================
vi 편집기 실습

/etc/passwd를  /root/passwd1로 복사하시오.

파일 안에서

1번 라인을 복사해서 14번 라인에 붙이시오.
(1) 라인복사 : yy / 붙혀넣기 : P
(2) :1 co 13

1번 라인의 root라는 단어를 edit 모드로 들어가서 ro123(i 진입키를 이용해서)o098(a 진입키를 이용해서)t 라고 적으시오.
했다.

1번 라인의 root 라는 글자 중에 ot만 복사해서 adm 이라는 단어에 붙여서 aotdm 이라는 단어를 만드시오.
ot에서 yw하몀ㄴ됨

1번부터 5번까지의 /(슬러쉬) 모양을 | (파이프)로 변환시키시오.
:1,5s/\//\|/g => 특수문자앞에는 \를쓰는듯 ㅇㅅㅇ?

지금까지 한 작업을 /root/vitest 란 파일로 저장하고 나가시오.
:wq /root/vitest

=======================================
vimtutor 실행

/root/vimtutor로 다른 이름 저장하시오.

vimtutor 종료 후

/root/vimtutor 파일 vim 편집기로 실행

1번 라인을 복사해서 3번 라인 아래에 붙여넣으시오.
1G yy 2G p
vim 이라는 단어를 123 로 문서 전체를 변경하시오.
:%s/vim/123/g

1번부터 20번 사이에 123을 다시 vim으로 변경하시오.
:1,20s/123/vim/g 
123패턴이발견되지않는다함 ㅜ

2번라인부터 5번라인까지 복사해서 10번 라인에 붙여넣으시오.
:2,5 co 9

1라인부터 10번라인을 잘라내서 마지막 라인 위로 붙여넣으시오.
1G 10dd G P
30번 라인부터 40번 라인까지 삭제하시오.
:30,40 d

1번 라인의 내용만 삭제하면서 123 이라는 단어를 쓰시오.
gg cc(한 라인을 삭제하면서 수정) 123 esc

============================================
쉘 메타문자 실습

root로 접속

1. /etc/ 로 이동 후에 틸드 문자를 사용해서 현 사용자의 디렉토리로 이동하시오.
[root@localhost ~]# cd /etc
[root@localhost etc]# cd ~

2. /etc/sysconfig/network-scripts/ 로 이동 후에 홈으로 다시 이동 - 문자를 사용해서 이동해 보시오.
[root@localhost ~]# cd /etc/sysconfig/network-scripts/
[root@localhost network-scripts]# cd -
/root

3. 자신의 홈디렉토리로 이동 /etc/sysconfig/network-scripts 디렉토리의 내용을 확인해보시오. (틸드 문자 이용)
[root@localhost ~]# ls ~-/

4. /tmp/mtest 디렉토리 안에 za1~za10 파일과 zb01~zb10 파일과 zc001~zc100 파일을 만드시오.
[root@localhost mtest]# touch za{1..10} zb{01..10} zc{001..100}
or
[root@localhost mtest]# touch z{a{1..10},b{01..10},c{001..100}}
5. 모든 파일을 삭제 하는데 za 파일은 [ ], zb 파일은 ?, zc 파일은 *을 사용하시오.

6. /media 디렉토리 안에 Music, Movie, Picture 디렉토리를 각각 만들고 music(00-20).mp3, movie(00-10).avi, picture(0-9).jpg 파일을 생성 후에 이름에 맞추어서 각각 넣으시오.

7. /media 디렉토리 안에 superman-season(1~3) 디렉토리를 각각 만들고 superman-season(1~3)-drama(01~10).avi 파일 생성 후에 이름에 맞추어서 각각 넣으시오. 파일 이동시 최대한 간단하게 작성해보시오.
ex)
directory명 : superman-season1 
file명 : superman-season1-drama01.avi

========================================================

리디렉션 및 파이프 
실습

centos 로 로그인
su - centos

1. ls -lR / 의 정상 출력 값은  ~/r01에 입력하고 에러값은 ~/r02에 입력하시오.
[centos@localhost ~]$ ls -lR > ~/r01 2> ~/r02

2. ls -lR / 의 모든 출력 값을 ~/r03에 입력하시오.

root 로 사용자전환

3. ps -ef 의 출력값을 한화면씩 끊어서 보시오.

4. yum list 의 결과값 중에서 ssh 라는 패턴이 들어가는 것을 출력해보시오.

프로세스 실습

터미널 4개 열 것
각 장치별로 sleep 1000 부터 4000 까지 백그라운드로 실행
(pts/0=>sleep 1000, pts/1=>sleep 2000, pts/2 => sleep 3000, pts/3=>sleep 4000 각각 실행 )
터미널 pts/0 에서 gedit과 firefox를 백그라운드로 실행

==========================================
프로세스 실습

터미널 4개 열 것
각 장치별로 sleep 1000 부터 4000 까지 백그라운드로 실행
(pts/0=>sleep 1000, pts/1=>sleep 2000, pts/2 => sleep 3000, pts/3=>sleep 4000 각각 실행 )
터미널 pts/0 에서 gedit과 firefox를 백그라운드로 실행
1. sleep, gedit, firefox 의 PID 와 PPID 가 무엇인지 확인

2. pts/2 번에서 sleep 20000 을 포그라운드로 실행시키고 백그라운드로 보내 볼 것

3. firefox를 kill 명령어로 kill 해볼 것

4. gedit을 pkill 명령어로 kill 해볼 것

5. pts/0, pts/3의 sleep 프로세스를 kill 할 것

6. 모든 bash 쉘 킬 할 것. 
killall -9 bash
7. nice 값 -11의 우선순위로 sleep 2000을 실행시키시오. (확인 ps -l | egrep '(sleep|NI)'

8. sleep 2000의 우선순위를 -15로 수정하시오.

centos로 사용자 전환

9. 위에 7번을 실행해보시오.

10. nice 값을 5로 sleep 2000 을 실행시키시오.

11. nice 값을 4로 수정해보시오.

12. nice 값을 10으로 수정해보시오.
